[{"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\index.js":"1","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\reportWebVitals.js":"2","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\Trivia.js":"3","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\auth\\Login.js":"5","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\auth\\Register.js":"6","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\nav\\NavBar.js":"7","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\questions\\QuestionCard.js":"8","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\questions\\QuestionForm.js":"9","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\board\\BoardCard.js":"10","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\posts\\PostCard.js":"11","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\posts\\PostForm.js":"12","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\posts\\PostList.js":"13","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\Modules\\PostManager.js":"14","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\Modules\\QuestionManager.js":"15"},{"size":631,"mtime":1647699455160,"results":"16","hashOfConfig":"17"},{"size":393,"mtime":1647699324198,"results":"18","hashOfConfig":"17"},{"size":1031,"mtime":1647282564449,"results":"19","hashOfConfig":"17"},{"size":1727,"mtime":1647709892445,"results":"20","hashOfConfig":"17"},{"size":2646,"mtime":1647894014024,"results":"21","hashOfConfig":"17"},{"size":3803,"mtime":1647893974421,"results":"22","hashOfConfig":"17"},{"size":1205,"mtime":1647698541355,"results":"23","hashOfConfig":"17"},{"size":389,"mtime":1647883472164,"results":"24","hashOfConfig":"17"},{"size":2300,"mtime":1647714493341,"results":"25","hashOfConfig":"17"},{"size":0,"mtime":1647265443392,"results":"26","hashOfConfig":"17"},{"size":680,"mtime":1647715107285,"results":"27","hashOfConfig":"17"},{"size":1677,"mtime":1647711067116,"results":"28","hashOfConfig":"17"},{"size":1046,"mtime":1647714068222,"results":"29","hashOfConfig":"17"},{"size":981,"mtime":1647710474888,"results":"30","hashOfConfig":"17"},{"size":822,"mtime":1647620828946,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"11gzm65",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\index.js",[],["69","70"],"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\reportWebVitals.js",[],"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\Trivia.js",["71","72","73","74"],"import React,  {useState} from \"react\"\r\nimport { Route, Link } from \"react-router-dom\"\r\nimport { ApplicationViews } from \"./ApplicationViews\"\r\nimport { NavBar } from \"./nav/NavBar\"\r\nimport { Login } from \"./auth/Login\"\r\nimport { Register } from \"./auth/Register\"\r\nimport \"./Trivia.css\"\r\n\r\nexport const Trivia = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(sessionStorage.getItem(\"nutshell_user\") !== null)\r\n\r\n  const setAuthUser = (user) => {\r\n      sessionStorage.setItem(\"trivia_user\", JSON.stringify(user))\r\n      setIsAuthenticated(sessionStorage.getItem(\"trivia_user\") !== null)\r\n  }\r\n\r\n  const clearUser = () => {\r\n      sessionStorage.clear();\r\n      setIsAuthenticated(sessionStorage.getItem(\"trivia_user\") !== null)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar clearUser={clearUser} isAuthenticated={isAuthenticated}/>\r\n      <ApplicationViews \r\n          setAuthUser={setAuthUser}\r\n          isAuthenticated={isAuthenticated}\r\n          setIsAuthenticated={setIsAuthenticated}\r\n      />\r\n    </>\r\n  )\r\n}","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\ApplicationViews.js",["75"],"import React from \"react\"\r\nimport { Route, Routes, Navigate } from \"react-router-dom\"\r\nimport { Login } from './auth/Login'\r\nimport { Register } from './auth/Register'\r\nimport { QuestionForm } from \"./questions/QuestionForm\"\r\nimport { QuestionCard } from \"./questions/QuestionCard\"\r\nimport { Home } from \"./board/BoardCard\"\r\nimport { Trivia } from \"./Trivia\"\r\nimport { PostCard } from \"./posts/PostCard\"\r\nimport { PostForm } from \"./posts/PostForm\"\r\nimport { PostList } from \"./posts/PostList\"\r\n \r\nexport const ApplicationViews = ({ isAuthenticated, setIsAuthenticated }) => {\r\n    const PrivateRoute = ({ children }) => {\r\n      return isAuthenticated ? children : <Navigate to=\"/login\" />\r\n    };\r\n  \r\n    const setAuthUser = (user) => {\r\n      sessionStorage.setItem(\"trivia_user\", JSON.stringify(user))\r\n      setIsAuthenticated(sessionStorage.getItem(\"trivia_user\") !== null)\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <Routes>\r\n          <Route exact path=\"/login\" element={<Login setAuthUser={setAuthUser} />} />\r\n\r\n          <Route exact path=\"/register\" element={<Register />} />\r\n          \r\n          <Route exact path=\"/\" element={<Home />} />\r\n          <Route path=\"/\" element={\r\n            <PrivateRoute>\r\n              <Trivia />\r\n            </PrivateRoute>\r\n          } />\r\n          <Route path=\"/questions/create\" element={<QuestionForm />} />\r\n\r\n          \r\n          \r\n  \r\n          \r\n          <Route path=\"/postFeed\" element={<PostCard />} />\r\n          <Route path=\"/postForm\" element={<PostForm />} />\r\n  \r\n          <Route  path=\"/postList\" element={\r\n              <PrivateRoute>\r\n                <PostList />\r\n              </PrivateRoute>\r\n          }/>\r\n        </Routes>\r\n      </>\r\n    )\r\n  }","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\auth\\Login.js",[],"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\auth\\Register.js",[],"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\questions\\QuestionCard.js",["76"],"import React from 'react';\r\nimport \"./Question.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const QuestionCard = ({ question }) => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <h3>Question: <span className=\"card-question\">\r\n            {question.question}\r\n          </span></h3>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n  ","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\questions\\QuestionForm.js",["77","78","79"],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { addQuestion } from '../../modules/QuestionManager';\r\nimport './QuestionForm.css'\r\nimport { addQuestion } from \"../Modules/QuestionManager\"\r\n\r\nexport const QuestionForm = () => {\r\n\t// State will contain both animal data as well as an isLoading flag.\r\n\t// Define the initial state of the form inputs with useState()\r\n\r\n\tconst [question, setQuestion] = useState({\r\n\t\tquestion: \"\",\r\n\t\tanswer: \"\",\r\n\t});\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t// you will need the the `getAll` in the LocationsManager and CustomersManager to complete this section\r\n\t\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\t//when a field changes, update state. The return will re-render and display based on the values in state\r\n\t// NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\r\n\t//Controlled component\r\n\r\n\tconst handleControlledInputChange = (event) => {\r\n\t\t/* When changing a state object or array,\r\n\t\talways create a copy, make changes, and then set state.*/\r\n\t\tconst newQuestion = { ...question }\r\n\t\tlet selectedVal = event.target.value\r\n\t\t// forms always provide values as strings. But we want to save the ids as numbers.\r\n\t\tif (event.target.id.includes(\"Id\")) {\r\n\t\t\tselectedVal = parseInt(selectedVal)\r\n\t\t}\r\n\t\t/* Animal is an object with properties.\r\n\t\tSet the property to the new value\r\n\t\tusing object bracket notation. */\r\n\t\tnewQuestion[event.target.id] = selectedVal\r\n\t\t// update state\r\n\t\tsetQuestion(newQuestion)\r\n\t}\r\n\r\n    useEffect(() => {\r\n\t\t//load location data and setState\r\n\t}, []);\r\n\r\n     useEffect(() => {\r\n\t\t//load customer data and setState\r\n\t}, []);\r\n\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<form className=\"questionForm\">\r\n\t\t\t<h2 className=\"questionForm__title\">New Question</h2>\r\n\t\t\t<fieldset>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"name\">Question:</label>\r\n\t\t\t\t\t<input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Question\" value={question.name} />\r\n\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<button className=\"btn btn-primary\"\r\n\t\t\t\tonClick={addQuestion}>\r\n\t\t\t\tCreate Question\r\n          </button>\r\n\t\t</form>\r\n\t)\r\n};\r\n","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\board\\BoardCard.js",[],"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\posts\\PostCard.js",["80","81"],"import React from 'react';\r\nimport \"./Post.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { editPost } from '../Modules/PostManager';\r\n\r\n\r\n\r\n\r\nexport const PostCard = ({ post, handleDeletePost }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n         <h2 class=\"post__title\">${post.title}</h2>\r\n         <div class=\"post__tagline\">${post.message}</div>\r\n         <p>Posted by ${user.id} on ${post.postDate}</p>\r\n        \r\n        <button type=\"button\" onClick={() => handleDeletePost(post.id)}>Delete post</button>\r\n        <button type=\"button\" onClick={() => editPost(post.id)}>Edit post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\posts\\PostForm.js",["82","83","84"],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { addPost } from '../Modules/PostManager';\r\nimport './PostForm.css'\r\n\r\nexport const PostForm = () => {\r\n    const [post, setPost] = useState({\r\n        url: \"\",\r\n        title: \"\",\r\n        synopsis: \"\"\r\n    });\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleControlledInputChange = (event) => {\r\n\t\tconst newPost = { ...post }\r\n\t\tlet selectedVal = event.target.value\r\n\t\tif (event.target.id.includes(\"Id\")) {\r\n\t\t\tselectedVal = parseInt(selectedVal)\r\n\t\t}\r\n\t\tnewPost[event.target.id] = selectedVal\r\n\t\tsetPost(newPost)\r\n\t}\r\n\r\n    const handleClickSavePost = (event) => {\r\n\t\tevent.preventDefault() \r\n\r\n        addPost(post).then(() => navigate(\"/posts\"))\r\n    }\r\n\r\n\r\n\treturn (\r\n\t\t<form className=\"postForm\">\r\n\t\t\t<h2 className=\"postForm__title\">New Post</h2>\r\n\t\t\t<fieldset>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"title\">Post title:</label>\r\n\t\t\t\t\t<input type=\"text\" id=\"title\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Article title\" value={post.title} />\r\n\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n\t\t\t<fieldset>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"synopsis\">Type something:</label>\r\n\t\t\t\t\t<input type=\"text\" id=\"synopsis\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Article synopsis\" value={post.content} />\r\n\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n            \r\n\t\t\t<button className=\"btn btn-primary\"\r\n\t\t\t\tonClick={handleClickSavePost}>\r\n\t\t\t\tPost\r\n          </button>\r\n\t\t</form>\r\n\t)\r\n};\r\n","C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\posts\\PostList.js",[],"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\Modules\\PostManager.js",[],"C:\\Users\\Sooth\\workspace\\Capstone-Scrimale\\src\\components\\Modules\\QuestionManager.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":15},{"ruleId":"89","severity":1,"message":"93","line":2,"column":17,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"89","severity":1,"message":"94","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":15},{"ruleId":"89","severity":1,"message":"95","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":18},{"ruleId":"89","severity":1,"message":"96","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"97","line":16,"column":9,"nodeType":"91","messageId":"92","endLine":16,"endColumn":18},{"ruleId":"89","severity":1,"message":"98","line":16,"column":20,"nodeType":"91","messageId":"92","endLine":16,"endColumn":32},{"ruleId":"89","severity":1,"message":"99","line":21,"column":8,"nodeType":"91","messageId":"92","endLine":21,"endColumn":16},{"ruleId":"89","severity":1,"message":"93","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"100","severity":2,"message":"101","line":15,"column":25,"nodeType":"91","messageId":"102","endLine":15,"endColumn":29},{"ruleId":"89","severity":1,"message":"103","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"97","line":13,"column":12,"nodeType":"91","messageId":"92","endLine":13,"endColumn":21},{"ruleId":"89","severity":1,"message":"98","line":13,"column":23,"nodeType":"91","messageId":"92","endLine":13,"endColumn":35},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'QuestionCard' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'navigate' is assigned a value but never used.","no-undef","'user' is not defined.","undef","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]