{"ast":null,"code":"const remoteURL = \"http://localhost:8088\";\nexport const getQuestionById = questionId => {\n  //be sure your animals have good data and related to a location and customer\n  return fetch(`${remoteURL}/animals/${questionId}?_expand=userId`).then(res => res.json());\n};\nexport const getAllQuestions = () => {\n  return fetch(`${remoteURL}/questions`).then(res => res.json());\n};\nexport const deleteQuestion = id => {\n  return fetch(`${remoteURL}/questions/${id}`, {\n    method: \"DELETE\"\n  }).then(result => result.json());\n};\nexport const addQuestion = newQuestion => {\n  return fetch(`${remoteURL}/questions`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newQuestion)\n  }).then(response => response.json());\n};","map":{"version":3,"sources":["C:/Users/Sooth/workspace/Capstone-Scrimale/src/components/Modules/QuestionManager.js"],"names":["remoteURL","getQuestionById","questionId","fetch","then","res","json","getAllQuestions","deleteQuestion","id","method","result","addQuestion","newQuestion","headers","body","JSON","stringify","response"],"mappings":"AAAA,MAAMA,SAAS,GAAG,uBAAlB;AAEA,OAAO,MAAMC,eAAe,GAAIC,UAAD,IAAgB;AAC7C;AACA,SAAOC,KAAK,CAAE,GAAEH,SAAU,YAAWE,UAAW,iBAApC,CAAL,CACNE,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,CAAP;AAED,CAJM;AAMP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAOJ,KAAK,CAAE,GAAEH,SAAU,YAAd,CAAL,CACNI,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,CAAP;AAED,CAHM;AAKP,OAAO,MAAME,cAAc,GAAIC,EAAD,IAAQ;AAClC,SAAON,KAAK,CAAE,GAAEH,SAAU,cAAaS,EAAG,EAA9B,EAAiC;AAC3CC,IAAAA,MAAM,EAAE;AADmC,GAAjC,CAAL,CAEJN,IAFI,CAECO,MAAM,IAAIA,MAAM,CAACL,IAAP,EAFX,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMM,WAAW,GAAIC,WAAD,IAAiB;AAC1C,SAAOV,KAAK,CAAE,GAAEH,SAAU,YAAd,EAA2B;AACnCU,IAAAA,MAAM,EAAE,MAD2B;AAEnCI,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAF0B;AAKnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf;AAL6B,GAA3B,CAAL,CAMJT,IANI,CAMCc,QAAQ,IAAIA,QAAQ,CAACZ,IAAT,EANb,CAAP;AAOD,CARM","sourcesContent":["const remoteURL = \"http://localhost:8088\"\r\n\r\nexport const getQuestionById = (questionId) => {\r\n  //be sure your animals have good data and related to a location and customer\r\n  return fetch(`${remoteURL}/animals/${questionId}?_expand=userId`)\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const getAllQuestions = () => {\r\n  return fetch(`${remoteURL}/questions`)\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const deleteQuestion = (id) => {\r\n    return fetch(`${remoteURL}/questions/${id}`, {\r\n      method: \"DELETE\"\r\n    }).then(result => result.json())\r\n}\r\n\r\nexport const addQuestion = (newQuestion) => {\r\n  return fetch(`${remoteURL}/questions`, {\r\n      method: \"POST\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newQuestion)\r\n  }).then(response => response.json())\r\n}"]},"metadata":{},"sourceType":"module"}