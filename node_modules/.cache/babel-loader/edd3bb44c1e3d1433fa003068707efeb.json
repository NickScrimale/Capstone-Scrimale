{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sooth\\\\workspace\\\\Capstone-Scrimale\\\\src\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n\n  const [registerUser, setRegisterUser] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const [conflictDialog, setConflictDialog] = useState(false);\n  const navigate = useNavigate();\n\n  const handleInputChange = event => {\n    const newUser = { ...registerUser\n    };\n    newUser[event.target.id] = event.target.value;\n    setRegisterUser(newUser);\n  };\n\n  const existingUserCheck = () => {\n    // If your json-server URL is different, please change it below!\n    return fetch(`http://localhost:3000/users?email=${registerUser.email}`).then(res => res.json()).then(user => !!user.length);\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n    existingUserCheck().then(userExists => {\n      if (!userExists) {\n        // If your json-server URL is different, please change it below!\n        fetch(\"http://localhost:3000/users\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: registerUser.email,\n            name: `${registerUser.firstName} ${registerUser.lastName}`\n          })\n        }).then(res => res.json()).then(createdUser => {\n          if (createdUser.hasOwnProperty(\"id\")) {\n            // The user id is saved under the key nutshell_user in session Storage. Change below if needed!\n            sessionStorage.setItem(\"trivia_user\", createdUser.id);\n            navigate(\"/\");\n          }\n        });\n      } else {\n        setConflictDialog(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"dialog\", {\n      className: \"dialog dialog--password\",\n      open: conflictDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Account with that email address already exists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button--close\",\n        onClick: e => setConflictDialog(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form--login\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3 font-weight-normal\",\n        children: \"Please Register for Application Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \" First Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          id: \"firstName\",\n          className: \"form-control\",\n          placeholder: \"First name\",\n          required: true,\n          autoFocus: true,\n          value: registerUser.firstName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \" Last Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          id: \"lastName\",\n          className: \"form-control\",\n          placeholder: \"Last name\",\n          required: true,\n          value: registerUser.lastName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputEmail\",\n          children: \" Email address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          className: \"form-control\",\n          placeholder: \"Email address\",\n          required: true,\n          value: registerUser.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"SO4Uv/bzCA2s3ROpmbkMs0QAZis=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Sooth/workspace/Capstone-Scrimale/src/components/auth/Register.js"],"names":["React","useState","useNavigate","Register","registerUser","setRegisterUser","name","email","conflictDialog","setConflictDialog","navigate","handleInputChange","event","newUser","target","id","value","existingUserCheck","fetch","then","res","json","user","length","handleRegister","e","preventDefault","userExists","method","headers","body","JSON","stringify","firstName","lastName","createdUser","hasOwnProperty","sessionStorage","setItem","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./Login.css\"\r\n\r\nexport const Register = () => {\r\n\r\n    const [registerUser, setRegisterUser] = useState({ name: \"\", email: \"\" })\r\n    const [conflictDialog, setConflictDialog] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleInputChange = (event) => {\r\n        const newUser = { ...registerUser }\r\n        newUser[event.target.id] = event.target.value\r\n        setRegisterUser(newUser)\r\n    }\r\n\r\n    const existingUserCheck = () => {\r\n        // If your json-server URL is different, please change it below!\r\n        return fetch(`http://localhost:3000/users?email=${registerUser.email}`)\r\n            .then(res => res.json())\r\n            .then(user => !!user.length)\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        existingUserCheck()\r\n            .then((userExists) => {\r\n                if (!userExists) {\r\n                    // If your json-server URL is different, please change it below!\r\n                    fetch(\"http://localhost:3000/users\", {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            email: registerUser.email,\r\n                            name: `${registerUser.firstName} ${registerUser.lastName}`\r\n                        })\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                // The user id is saved under the key nutshell_user in session Storage. Change below if needed!\r\n                                sessionStorage.setItem(\"trivia_user\", createdUser.id)\r\n                                navigate(\"/\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    setConflictDialog(true)\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <main style={{ textAlign: \"center\" }}>\r\n\r\n            <dialog className=\"dialog dialog--password\" open={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => setConflictDialog(false)}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Application Name</h1>\r\n                <fieldset>\r\n                    <label htmlFor=\"firstName\"> First Name </label>\r\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus value={registerUser.firstName} onChange={handleInputChange} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"lastName\"> Last Name </label>\r\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required value={registerUser.lastName} onChange={handleInputChange} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputEmail\"> Email address </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email address\" required value={registerUser.email} onChange={handleInputChange} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button type=\"submit\"> Sign in </button>\r\n                </fieldset>\r\n            </form>\r\n        </main>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}